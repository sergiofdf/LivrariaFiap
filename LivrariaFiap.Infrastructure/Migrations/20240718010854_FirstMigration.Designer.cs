// <auto-generated />
using System;
using LivrariaFiap.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LivrariaFiap.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240718010854_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LivrariaFiap.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("LivrariaFiap.Domain.Entities.Estoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp");

                    b.Property<int>("LivroId")
                        .HasColumnType("integer");

                    b.Property<short>("Quantidade")
                        .HasColumnType("SMALLINT");

                    b.HasKey("Id");

                    b.HasIndex("LivroId");

                    b.ToTable("Estoque", (string)null);
                });

            modelBuilder.Entity("LivrariaFiap.Domain.Entities.ItemPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp");

                    b.Property<int>("LivroId")
                        .HasColumnType("integer");

                    b.Property<int>("PedidoId")
                        .HasColumnType("integer");

                    b.Property<double>("PrecoTotalItem")
                        .HasColumnType("NUMERIC(8,2)");

                    b.Property<short>("Quantidade")
                        .HasColumnType("SMALLINT");

                    b.HasKey("Id");

                    b.HasIndex("LivroId");

                    b.HasIndex("PedidoId");

                    b.ToTable("ItemPedido", (string)null);
                });

            modelBuilder.Entity("LivrariaFiap.Domain.Entities.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp");

                    b.Property<string>("Editora")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<double>("Preco")
                        .HasColumnType("NUMERIC(8,2)");

                    b.Property<string>("Tema")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("Livro", (string)null);
                });

            modelBuilder.Entity("LivrariaFiap.Domain.Entities.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp");

                    b.Property<short>("Status")
                        .HasColumnType("SMALLINT");

                    b.Property<double>("ValorPedido")
                        .HasColumnType("NUMERIC(8,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedido", (string)null);
                });

            modelBuilder.Entity("LivrariaFiap.Domain.Entities.Cliente", b =>
                {
                    b.OwnsOne("LivrariaFiap.Domain.Entities.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("Id")
                                .HasColumnType("integer");

                            b1.Property<string>("Cep")
                                .IsRequired()
                                .HasColumnType("VARCHAR(9)");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasColumnType("VARCHAR(100)");

                            b1.Property<DateTime>("DataCriacao")
                                .HasColumnType("timestamp");

                            b1.Property<string>("Estado")
                                .IsRequired()
                                .HasColumnType("VARCHAR(2)");

                            b1.Property<string>("Pais")
                                .IsRequired()
                                .HasColumnType("VARCHAR(100)");

                            b1.Property<string>("Rua")
                                .IsRequired()
                                .HasColumnType("VARCHAR(100)");

                            b1.HasKey("Id");

                            b1.ToTable("Endereco", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("Id");
                        });

                    b.OwnsOne("LivrariaFiap.Domain.Entities.Telefone", "Telefone", b1 =>
                        {
                            b1.Property<int>("Id")
                                .HasColumnType("integer");

                            b1.Property<string>("CodigoLocal")
                                .IsRequired()
                                .HasColumnType("VARCHAR(2)");

                            b1.Property<string>("CodigoPais")
                                .IsRequired()
                                .HasColumnType("VARCHAR(2)");

                            b1.Property<DateTime>("DataCriacao")
                                .HasColumnType("timestamp");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnType("VARCHAR(10)");

                            b1.HasKey("Id");

                            b1.ToTable("Telefone", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("Id");
                        });

                    b.Navigation("Endereco")
                        .IsRequired();

                    b.Navigation("Telefone")
                        .IsRequired();
                });

            modelBuilder.Entity("LivrariaFiap.Domain.Entities.Estoque", b =>
                {
                    b.HasOne("LivrariaFiap.Domain.Entities.Livro", "Livro")
                        .WithMany()
                        .HasForeignKey("LivroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("LivrariaFiap.Domain.Entities.ItemPedido", b =>
                {
                    b.HasOne("LivrariaFiap.Domain.Entities.Livro", "Livro")
                        .WithMany("ItemsPedido")
                        .HasForeignKey("LivroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LivrariaFiap.Domain.Entities.Pedido", "Pedido")
                        .WithMany("ItemsPedido")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Livro");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("LivrariaFiap.Domain.Entities.Pedido", b =>
                {
                    b.HasOne("LivrariaFiap.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("LivrariaFiap.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("LivrariaFiap.Domain.Entities.Livro", b =>
                {
                    b.Navigation("ItemsPedido");
                });

            modelBuilder.Entity("LivrariaFiap.Domain.Entities.Pedido", b =>
                {
                    b.Navigation("ItemsPedido");
                });
#pragma warning restore 612, 618
        }
    }
}
